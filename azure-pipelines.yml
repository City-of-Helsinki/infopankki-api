# Python Django
# Test a Django project on multiple versions of Python.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python


pool:
  vmImage: 'ubuntu-latest'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.7'
    architecture: 'x64'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      sudo apt-get update
      sudo apt-get install gdal-bin gettext postgresql postgresql-client postgresql-9.5-postgis-2.2 postgresql-9.5-postgis-scripts postgresql-server-dev-9.5
      sudo -H -u postgres psql template1 -c 'create extension postgis;'
      sudo -H -u postgres psql template1 -c 'create extension hstore;'
      sudo -H -u postgres psql -c "CREATE USER info WITH PASSWORD 'info';"
      sudo -H -u postgres createdb -O info infopankki


- task: PythonScript@0
  displayName: 'Export project path'
  inputs:
    scriptSource: 'inline'
    script: |
      """Search all subdirectories for `manage.py`."""
      from glob import iglob
      from os import path
      # Python >= 3.5
      manage_py = next(iglob(path.join('**', 'manage.py'), recursive=True), None)
      if not manage_py:
          raise SystemExit('Could not find a Django project')
      project_location = path.dirname(path.abspath(manage_py))
      print('Found Django project in', project_location)
      print('##vso[task.setvariable variable=projectRoot]{}'.format(project_location))

- script: printenv
- script: |
    python -m pip install --upgrade pip
    python -m venv ./venv
    ./venv/bin/pip install -r requirements.txt
  displayName: 'Install prerequisites'

- script: |
    pushd '$(projectRoot)'
    export DATABASE_URL="postgis://info:info/infopankki"
    export DEBUG=False
    ./venv/bin/python manage.py test
